
//色設定
$color1: #4d5971;
$color2: #ffffff;
$color3: #a2a9b1;
$color4: #be914e;
$color5: #cbab7b;
$color6: #d5cabb;
$color7: #f7f7f7; //背景色
$color8: #eae7e2; //背景色
$color9: rgba(255,255,255,0.8);
$color10: #C1C1C9;

//break point
$break-point_xl: 1200px;
$break-point_lg: 1024px;
$break-point-md: 768px;
$break-point-sp: 540px;
$break-point-xs: 375px;

// @include xl { (1200px) } PCの最小
// @include lg { (1024px) } タブレット横
// @include md { (768px) }　タブレット縦
// @include sm { (767px) }　タブレット-スマホ
// @include sp { (540px) }　スマホ-iPhoneX
// @include xs { (375px) }　スマホ-iPhone5/6

//media query
@mixin xl {
  @media screen and (max-width: $break-point_xl) {
    @content;
  }
}
@mixin lg {
  @media screen and (max-width: $break-point_lg) {
    @content;
  }
}
@mixin md {
  @media screen and (max-width: $break-point-md) {
    @content;
  }
}
@mixin sm {
  @media screen and (max-width: $break-point-md - 1) {
    @content;
  }
}
@mixin sp {
  @media screen and (max-width: $break-point_sp) {
    @content;
  }
}
@mixin xs{
  @media screen and (max-width: $break-point_xs) {
    @content;
  }
}
/* --------------------------------  MIX IN  -------------------------------- */



// 角丸ボタン
// * ex) @include kadomaruBtn(文字サイズ, 文字色, 背景色, padding, radius)
@mixin kadomaruBtn($font-size: 16px, $text-color: $color1, $bg-color: invert($text-color), $padding: 0.65em 2em, $radius: 1.4em) {

  font-size: #{$font-size};
  padding: #{$padding};
  color: #{$text-color};
  background-color: #{$bg-color};
  border: solid 1px #{$bg-color};
  border-radius: #{$radius};
  transition: 0.25s;
  &:hover {
    color: #{$bg-color};
    background-color: #{$text-color};
    border: solid 1px #{$bg-color};
  }

}

// 要素から溢れる文字を...と省略する
// * ex) @include lines-truncate(省略する行)
@mixin lines-truncate($lines: 1){
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}

@mixin lines-truncate-2($lines: 2){
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}

// position:absolute一括設定
// * ex) @include absolute(上, 右, 下, 左);
@mixin absolute($top:null, $right:null, $bottom:null, $left:null){
  position: absolute;
  @if $top != null{
    top: $top;
  }
  @if $right != null{
    right: $right;
  }
  @if $bottom != null{
    bottom: $bottom;
  }
  @if $left != null{
    left: $left;
  }
}

// absolute center (X,Y)
// * ex) @include absoluteCenter
@mixin absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
}

// absolute center (Y)
// * ex) @include absoluteCenterY
@mixin absoluteCenterY {
  position: absolute;
  top: 50%;
  left: 0%;
  transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
}

// absolute center (X)
// * ex) @include absoluteCenterX
@mixin absoluteCenterX {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
}
@mixin scrollbar{
  ::-webkit-scrollbar{
    width: 10px;
  }
  ::-webkit-scrollbar-track{
    border: none;
    border-radius: 10px;
  }
  ::-webkit-scrollbar-thumb{
    background: #ccc;
    border-radius: 10px;
    box-shadow: none;
  }
}
//flex
// * ex) @include flex ()
// trueとfalseを1と0にした。
@mixin flex($justify:0, $align:0, $wrap:0, $wrap_align:0, $column:0) {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;

  // justify-content水平方向揃え（第一引数）
  @if $justify == start { // 左揃え
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  } @else if $justify == end { // 右揃え
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  } @else if $justify == center { // 中央揃え
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  } @else if $justify == between { // 両端配置
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  } @else if $justify == around { // 均等配置
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }

  // align-items垂直方向揃え（第二引数）
  @if $align == start { // 上揃え
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  } @else if $align == end { // 下揃え
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end;
  } @else if $align == center { // 中央揃え
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  } @else if $align == baseline { // ベースライン
    -webkit-align-items: baseline;
    -ms-flex-align: baseline;
    align-items: baseline;
  } @else if $align == stretch { // 高さ揃え
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }

  // flex-wrap子要素の折り返し設定（第三引数）
  @if $wrap == nowrap { // 折り返ししない
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  } @else if $wrap == wrap { // 上から下
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  } @else if $wrap == reverse { // 下から上
    -webkit-flex-wrap: wrap-reverse;
    -ms-flex-wrap: wrap-reverse;
    flex-wrap: wrap-reverse;
  }

  // align-content複数行設定（第四引数）
  @if $wrap_align == start { // 上揃え
    -webkit-align-content: flex-start;
    -ms-flex-line-pack: start;
    align-content: flex-start;
  } @else if $wrap_align == end { // 下揃え
    -webkit-align-content: flex-end;
    -ms-flex-line-pack: end;
    align-content: flex-end;
  } @else if $wrap_align == center { // 中央揃え
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center;
  } @else if $wrap_align == between { // 両端配置
    -webkit-align-content: space-between;
    -ms-flex-line-pack: justify;
    align-content: space-between;
  } @else if $wrap_align == around { // 均等配置
    -webkit-align-content: space-around;
    -ms-flex-line-pack: distribute;
    align-content: space-around;
  } @else if $wrap_align == stretch { // 高さ揃え
    -webkit-align-content: stretch;
    -ms-flex-line-pack: stretch;
    align-content: stretch;
  }

  // 縦並び（第五引数）
  @if $column == 1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

// ----
// * ex)
//   @include none-appearance;
@mixin none-appearance {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  margin: 0;
  padding: 0;
  border: 0;
  border-radius: 0;
  background: none transparent;
  background-clip: padding-box;
  color: inherit;
  font-size: inherit;
  vertical-align: middle;
  box-sizing: border-box;
  &::-ms-clear {
    display: none;
  }
  &::-ms-reveal {
    display: none;
  }
  &::-ms-expand {
    display: none;
  }
}

@mixin svg-back{
  background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22129%22%20height%3D%22145%22%20viewBox%3D%220%200%20129%20145%22%3E%20%3Cdefs%3E%20%3Cstyle%3E%20.back%20%7B%20fill%3A%20%23be914e%3B%20%7D%20%3C%2Fstyle%3E%20%3C%2Fdefs%3E%20%3Cpath%20id%3D%22said-btn%22%20data-name%3D%22online-btn%22%20class%3D%22back%22%20d%3D%22M46.766%2C130.032C20.2%2C119.11%2C0%2C94.091%2C0%2C64.59a64.5%2C64.5%2C0%2C1%2C1%2C129%2C0c0%2C29.362-25.309%2C54.077-46.7%2C65.017a17.989%2C17.989%2C0%2C0%2C1-35.534.425Z%22%2F%3E%3C%2Fsvg%3E');
}

@mixin svg-back-hover{
  background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22129%22%20height%3D%22145%22%20viewBox%3D%220%200%20129%20145%22%3E%20%3Cdefs%3E%20%3Cstyle%3E%20.back%20%7B%20fill%3A%20%234D5971%3B%20%7D%20%3C%2Fstyle%3E%20%3C%2Fdefs%3E%20%3Cpath%20id%3D%22said-btn%22%20data-name%3D%22online-btn%22%20class%3D%22back%22%20d%3D%22M46.766%2C130.032C20.2%2C119.11%2C0%2C94.091%2C0%2C64.59a64.5%2C64.5%2C0%2C1%2C1%2C129%2C0c0%2C29.362-25.309%2C54.077-46.7%2C65.017a17.989%2C17.989%2C0%2C0%2C1-35.534.425Z%22%2F%3E%3C%2Fsvg%3E')
}
/* --------------------------------  MIX IN  -------------------------------- */



/* --------------------------------  Admin Menu  -------------------------------- */
/*メニューの背景色*/
#adminmenuback,
#adminmenuwrap,
#adminmenu {
  background: $color1;
}
/*メニューのホバーした時の背景色*/
#adminmenu a:hover,
#adminmenu li.menu-top:hover,
#adminmenu li.opensub > a.menu-top,
#adminmenu li > a.menu-top:focus {
  color: $color3;
  background: darken($color1, 10%);
}
/* Admin Menu: submenu */
/*メニューの第2階層の背景色*/
#adminmenu .wp-submenu,
#adminmenu .wp-has-current-submenu .wp-submenu,
#adminmenu .wp-has-current-submenu.opensub .wp-submenu,
.folded #adminmenu .wp-has-current-submenu .wp-submenu,
#adminmenu a.wp-has-current-submenu:focus + .wp-submenu {
  background: darken($color3, 40%);
}

#adminmenu li.wp-has-submenu.wp-not-current-submenu.opensub:hover:after {
  border-right-color: darken($color3, 40%);
}
/*アクティブ時の背景色*/
#adminmenu li.current a.menu-top,
#adminmenu li.wp-has-current-submenu a.wp-has-current-submenu,
#adminmenu li.wp-has-current-submenu .wp-submenu .wp-submenu-head,
.folded #adminmenu li.current.menu-top {
  color: $color2;
  background: $color1;
}
/* Admin Menu: bubble */
/*項目右の数字アイコンの色*/
#adminmenu .awaiting-mod,
#adminmenu .update-plugins {
  color: $color2;
  border: 1px solid $color2;
  background-color: rgba(255, 255, 255, 0);
}

#adminmenu li.current a .awaiting-mod,
#adminmenu li a.wp-has-current-submenu .update-plugins,
#adminmenu li:hover a .awaiting-mod,
#adminmenu li.menu-top:hover > a .update-plugins {
  color: $color2;
  border: 1px solid $color2;
  background-color: rgba(255, 255, 255, 0);
}
/* Admin Bar */
/*管理画面のヘッダーの色*/
#wpadminbar {
  color: #fff;
  background: darken($color3, 35%);
}
/* Core UI */
/*更新、公開ボタンの色*/
.wp-core-ui .button-primary {
  background: darken($color3, 35%);
  border-color: darken($color3, 35%);
  color: #fff;
}

.wp-core-ui .button-primary:hover, .wp-core-ui .button-primary:focus {
  background: darken($color3, 35%);
  border-color: darken($color3, 35%);
  color: #fff;
}
/* --------------------------------  Admin Menu  -------------------------------- */
